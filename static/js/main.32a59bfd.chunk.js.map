{"version":3,"sources":["components/main/header.js","components/main/about.js","components/main/portfolio.js","components/main/footer.js","components/main/contact.js","components/main/mainpage.js","components/folder/folder.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","message","count","window","addEventListener","document","getElementById","classList","remove","id","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","to","Component","About","this","data","name","resumedownload","profilepic","bio","email","occupation","cityname","address","social","map","ele","key","url","style","fontSize","display","Portfolio","education","school","degree","graduated","description","work","company","color","title","years","skills","level","toLowerCase","margin","Footer","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","Contact","phone","street","city","zip","MainPage","resumeData","gridtemplate","resizeWindow","bind","$","ajax","dataType","cache","success","setState","error","xhr","status","err","console","log","alert","getResumeData","removeEventListener","innerWidth","gridTemplateColumns","main","resume","Folder","updateToNewFolder","axios","get","server","then","res","hasOwnProperty","ret","sort","a","b","isDict","list","catch","updatebasedonCurrentURL","URL","substr","indexOf","e","onClick","prev","substring","lastIndexOf","link","location","history","pushState","items","App","ReactGA","initialize","pageview","pathname","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32a59bfd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Navbar, NavDropdown, Nav  } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            message : ``,\n            count: 0    \n        }\n    }\n\n    componentDidMount(){\n\n\n        window.addEventListener('click', ()=>{\n            if(document.getElementById('navbarSupportedContent') != null){\n                document.getElementById('navbarSupportedContent').classList.remove('show');\n            }\n        });\n    }\n\n    render() { \n        return ( \n            <nav id='navbar' className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <button id='nav-toggler' className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"#about\">About <span className=\"sr-only\">(current)</span></a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#portfolio\">Portfolio</a>\n                            </li>\n                            <li className='nav-item'>\n                                <a className=\"nav-link\" href=\"#contact\">Contact</a>\n                            </li>\n                            <li className='nav-item'>\n                                <Link className=\"nav-link\" to=\"/public\">Folder</Link>\n                            </li>\n                        </ul>\n                    </div>\n            </nav>\n        );\n    }\n}\n \nexport default Header;","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n\n    render() { \n        if(this.props.data){\n            var {name, profilepic, bio, email, resumedownload, occupation} = this.props.data;\n            var cityname = this.props.data.address.cityname;\n            var social = this.props.data.social.map(ele => {\n                return <a key={ele.name} className='link' href={ele.url}>{ele.name} <i className={ele.className} style={{fontSize:'30px'}}></i></a>\n            });\n        }\n\n        return ( \n            <section className='about' id='about'>\n                <div className='intro'>\n                    <h1 style={{fontSize: '50px'}}>{name}</h1>\n                    <p className='lightdark'>{occupation}  in  {cityname}</p>\n                    <p>\n\n                    </p>\n                    <div style={{display: 'inline'}}>{social}</div>\n                    <a className='btn btn-info download' href={resumedownload}><i className=\"fa fa-download\" style={{fontSize:'30px'}}></i> Download Resume</a>\n                </div>\n            </section>\n         );\n    }\n}\n \nexport default About;","import React, { Component } from 'react';\n\nclass Portfolio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n\n    render() { \n        if(this.props.data){\n            var education = this.props.data.education.map(function(education){\n                return <div key={education.school}>\n                            <h3>{education.school}</h3>\n                            <p className=\"info\"><em>{education.degree}</em><br/><span className=\"date\">Excepted {education.graduated}</span></p>\n                            <p>{education.description}</p>\n                        </div>\n            })\n            var work = this.props.data.work.map(function(work){\n                return <div key={work.company} className='experience-section'>\n                            <h3>{work.company}</h3>\n                            <p className=\"info\"><em style={{color: 'lightslategrey'}}>{work.title}</em><br/><span className=\"date\">{work.years}</span></p>\n                            <p className='description'>{work.description}</p>\n                        </div>\n            })\n            var skills = this.props.data.skills.map(function(skills){\n                var btntype = skills.level <= 30 ? 'btn-outline-info ' : skills.level <= 60 ? 'btn-outline-danger ' : 'btn-outline-success ';\n                var className = 'btn '+ btntype +skills.name.toLowerCase();\n                return <div key={skills.name} className={className} style={{margin: '0 10px 10px 0'}}><strong>{skills.name}</strong></div>\n            })\n        }\n\n        return (  \n            <section className='portfolio' id='portfolio'>\n                <div className='resume-section'>\n                    <h2 className='resume-title' style={{color: '#6699ff'}}>Education:</h2>\n\n                    <div>{education}</div>\n                </div>\n\n                <div className='resume-section'>\n                    <h2 className='resume-title' style={{color: '#ff9966'}}><span>Experience:</span></h2>\n\n                    <div>{work}</div>\n                </div>\n\n                <div className='resume-section'>\n                    <h2 className='resume-title' style={{color: '#00ff99'}}>Skills:</h2>\n\n                    <div>{skills}</div>\n                </div>\n            </section>\n        );\n    }\n}\n \nexport default Portfolio;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = today.getFullYear();\n        var today = `${mm}/${dd}/${yyyy}`;\n\n        return ( \n            <footer className='footer'>\n                <p>Posted by: Matthew Pan - Date: {today} - Website: <a href='https://www.mattpan.com'>www.mattpan.com</a></p>\n            </footer>\n         );\n    }\n}\n \nexport default Footer;","import React, { Component } from 'react';\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n\n    render() { \n        if (this.props.data){\n            var {email, phone, address} = this.props.data;\n            var {street, city, state, zip, cityname} = address;\n        }\n\n        return ( \n            <section className='contact' id='contact'>\n                <div>\n                    <h2 className='resume-title' style={{color:'#9933ff'}}>Contact Info</h2>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Email</td>\n                                <td> : </td>\n                                <td>{email}</td>\n                            </tr>\n                            <tr>\n                                <td>Phone</td>\n                                <td> : </td>\n                                <td>{phone}</td>\n                            </tr>\n                            <tr>\n                                <td>Address</td>\n                                <td> : </td>\n                                <td>{street}</td>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td>{`${city}, ${state}, ${zip}`}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section>\n         );\n    }\n}\n \nexport default Contact;","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport $ from 'jquery';\nimport '../../App.css';\nimport './default.css';\nimport Header from './header';\nimport About from './about';\nimport Portfolio from './portfolio';\nimport Footer from './footer';\nimport Contact from './contact';\n\nclass MainPage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      resumeData : {},\n      gridtemplate : '1fr 2.5fr 1fr'\n    };\n\n    this.resizeWindow = this.resizeWindow.bind(this);\n  }\n\n  getResumeData(){\n    $.ajax({\n      url:'/resumeData.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n        this.setState({resumeData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount(){\n    this.getResumeData();\n    this.resizeWindow();\n    window.addEventListener(\"resize\", this.resizeWindow);\n  }\n\n  componentWillUnmount(){\n    window.removeEventListener(\"resize\", this.resizeWindow);\n  }\n\n  resizeWindow() {\n    if(window.innerWidth < 500){\n      this.setState({gridtemplate : '1fr 10fr 1fr'});\n    }\n    else{\n      this.setState({gridtemplate : '1fr 2.5fr 1fr'});\n    }\n  }\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <div className='main' style={{gridTemplateColumns: this.state.gridtemplate}}>\n          <div className='leftEmpty'></div>\n          <div className='rightEmpty'></div>\n          <About data={this.state.resumeData.main}></About>\n          <Portfolio data={this.state.resumeData.resume}></Portfolio>\n          <Contact data={this.state.resumeData.main}></Contact>\n        </div>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Folder extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            list : [],\n            server : 'https://gcpf1.mattpan.com'\n        };\n        this.updatebasedonCurrentURL = this.updatebasedonCurrentURL.bind(this);\n        this.updateToNewFolder = this.updateToNewFolder.bind(this);\n    }\n\n    componentDidMount(){\n        this.updateToNewFolder(document.URL.substr(document.URL.indexOf('/public')));\n        window.addEventListener('popstate', this.updatebasedonCurrentURL);\n    }\n\n    updatebasedonCurrentURL(e){\n        this.updateToNewFolder(document.URL.substr(document.URL.indexOf('/public')));\n    }\n\n    updateToNewFolder = name => {\n        axios.get(this.state.server + name)\n        .then(res => {\n            if(!res.data.message.hasOwnProperty(\"errno\")){\n                var ret = res.data.message;\n                ret.sort((a,b)=>{return a.isDict == b.isDict ? 0 : a.isDict ? -1 : 1;});\n                this.setState({list: ret});\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <button onClick={()=>{\n                    var prev = document.URL.substring(document.URL.indexOf('/public'), document.URL.lastIndexOf('/'));\n                    if(prev == ''){\n                        var link = document.URL.substring(0, document.URL.lastIndexOf('/'));\n                        window.location.href = link;\n                    }\n                    else{\n                        this.updateToNewFolder(prev);\n                        window.history.pushState(null, null, document.URL.substring(0, document.URL.lastIndexOf('/')));\n                    }}}>Back</button>\n                {this.state.list.map(items => {\n                    if(items.isDict){\n                        return <Link key={this.state.server + items.name} to={items.name} onClick={()=>this.updateToNewFolder(items.name)} style={{'display': 'block', 'color':'black'}}>{'Folder: ' + items.name.substr(items.name.lastIndexOf('/')+1)}</Link>;\n                    }\n                    else{\n                        return <a key={this.state.server + items.name} href={this.state.server + items.name} style={{'display': 'block'}}>{'Files: ' + items.name.substr(items.name.lastIndexOf('/')+1)}</a>;\n                    }\n                    \n                })}\n            </div>\n        );\n    }\n}\n\nexport default Folder;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport './App.css';\nimport './components/main/default.css';\nimport {Switch, Route} from 'react-router-dom';\nimport MainPage from './components/main/mainpage.js';\nimport Folder from './components/folder/folder';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    ReactGA.initialize('UA-156169363-1');\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/' component={MainPage}/>\n          <Route path='/public' component={Folder}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>\n    <App />\n</BrowserRouter>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}