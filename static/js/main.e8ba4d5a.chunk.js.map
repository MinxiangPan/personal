{"version":3,"sources":["components/main/header.js","components/main/about.js","components/main/portfolio.js","components/main/footer.js","components/main/contact.js","components/main/mainpage.js","components/folder/folder.js","components/folder/mediaFolder.js","components/folder/music_album.js","components/folder/musicPlayer.js","components/folder/music.js","components/folder/main.js","components/main/login.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","message","count","window","addEventListener","document","getElementById","classList","remove","id","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","to","Component","About","this","data","name","resumedownload","profilepic","bio","email","occupation","cityname","address","social","map","ele","key","url","style","fontSize","display","Portfolio","education","school","degree","graduated","GPA","GPA_scale","description","work","company","color","title","years","skills","level","toLowerCase","margin","Footer","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","Contact","phone","street","city","zip","MainPage","resumeData","gridtemplate","resizeWindow","bind","$","ajax","dataType","cache","success","setState","error","xhr","status","err","console","log","alert","getResumeData","removeEventListener","innerWidth","gridTemplateColumns","main","resume","Folder","updateToNewFolder","axios","get","server","then","res","hasOwnProperty","ret","sort","a","b","isDict","list","catch","updatebasedonCurrentURL","ignoreStatic","defaults","headers","common","URL","substr","indexOf","target","e","onClick","prev","substring","lastIndexOf","link","location","history","pushState","items","open","MediaFolder","userID","username","audioUrl","audioTitle","testAudio","localStorage","getItem","getUserInfo","method","responseType","response","createObjectURL","Blob","loading","audio","src","play","class","role","controls","testThre","Album","album_data","alt","album_title","artist","MusicPlayer","listOfSong","currentAlbum","musicPlayIndex","playType","playTargetSong","updateStateElement","playNext","pauseMusic","playMusic","getAudioInstance","keyCode","paused","pause","index","length","foundIndex","findIndex","concat","song_title","Music","audioInstance","listOfalbum","audioList","songList","getListOfAlbum","getListOfSong","playSong","uploadSong","getSongUrl","updateMusicPlayerList","album_id","alblum_id","song_id","musicSrc","audio_file","formData","FormData","append","Math","random","instance","tabindex","aria-labelledby","aria-hidden","data-dismiss","for","aria-describedby","required","value","files","FolderMain","password","post","token","setItem","removeItem","path","render","Login","processLogin","back","App","ReactGA","initialize","pageview","pathname","exact","component","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8ba4d5a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Navbar, NavDropdown, Nav  } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            message : ``,\r\n            count: 0    \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('click', ()=>{\r\n            if(document.getElementById('navbarSupportedContent') != null){\r\n                document.getElementById('navbarSupportedContent').classList.remove('show');\r\n            }\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <nav id='navbar' className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <button id='nav-toggler' className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#about\">About <span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#portfolio\">Portfolio</a>\r\n                            </li>\r\n                            <li className='nav-item'>\r\n                                <a className=\"nav-link\" href=\"#contact\">Contact</a>\r\n                            </li>\r\n                            <li className='nav-item'>\r\n                                <Link className=\"nav-link\" to=\"/folder/public\">Folder</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass About extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    render() { \r\n        if(this.props.data){\r\n            var {name, profilepic, bio, email, resumedownload, occupation} = this.props.data;\r\n            var cityname = this.props.data.address.cityname;\r\n            var social = this.props.data.social.map(ele => {\r\n                return <a key={ele.name} className='link' href={ele.url}>{ele.name} <i className={ele.className} style={{fontSize:'30px'}}></i></a>\r\n            });\r\n        }\r\n\r\n        return ( \r\n            <section className='about' id='about'>\r\n                <div className='intro'>\r\n                    <h1 style={{fontSize: '50px'}}>{name}</h1>\r\n                    <p className='lightdark'>{occupation}  in  {cityname}</p>\r\n                    <p>\r\n\r\n                    </p>\r\n                    <div style={{display: 'inline'}}>{social}</div>\r\n                    <a className='btn btn-info download' href={resumedownload}><i className=\"fa fa-download\" style={{fontSize:'30px'}}></i> Download Resume</a>\r\n                </div>\r\n            </section>\r\n         );\r\n    }\r\n}\r\n \r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    render() { \r\n        if(this.props.data){\r\n            var education = this.props.data.education.map(function(education){\r\n                return <div key={education.school}>\r\n                            <h3>{education.school}</h3>\r\n                            <p className=\"info\">\r\n                                <em>{education.degree}</em><br/>\r\n                                <span className=\"date\">{education.graduated}</span><br/>\r\n                                <span className=\"date\">GPA: {education.GPA} / {education.GPA_scale}</span>\r\n                            </p>\r\n                            <p>{education.description}</p>\r\n                        </div>\r\n            })\r\n            var work = this.props.data.work.map(function(work){\r\n                return <div key={work.company} className='experience-section'>\r\n                            <h3>{work.company}</h3>\r\n                            <p className=\"info\"><em style={{color: 'lightslategrey'}}>{work.title}</em><br/><span className=\"date\">{work.years}</span></p>\r\n                            <p className='description'>{work.description}</p>\r\n                        </div>\r\n            })\r\n            var skills = this.props.data.skills.map(function(skills){\r\n                var btntype = skills.level <= 30 ? 'btn-outline-info ' : skills.level <= 60 ? 'btn-outline-danger ' : 'btn-outline-success ';\r\n                var className = 'btn '+ btntype +skills.name.toLowerCase();\r\n                return <div key={skills.name} className={className} style={{margin: '0 10px 10px 0'}}><strong>{skills.name}</strong></div>\r\n            })\r\n        }\r\n\r\n        return (  \r\n            <section className='portfolio' id='portfolio'>\r\n                <div className='resume-section'>\r\n                    <h2 className='resume-title' style={{color: '#6699ff'}}>Education:</h2>\r\n\r\n                    <div>{education}</div>\r\n                </div>\r\n\r\n                <div className='resume-section'>\r\n                    <h2 className='resume-title' style={{color: '#ff9966'}}><span>Experience:</span></h2>\r\n\r\n                    <div>{work}</div>\r\n                </div>\r\n\r\n                <div className='resume-section'>\r\n                    <h2 className='resume-title' style={{color: '#00ff99'}}>Skills:</h2>\r\n\r\n                    <div>{skills}</div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Portfolio;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        var today = `${mm}/${dd}/${yyyy}`;\r\n\r\n        return ( \r\n            <footer className='footer'>\r\n                <p>Posted by: Matthew Pan - Date: {today} - Website: <a href='https://www.mattpan.com'>www.mattpan.com</a></p>\r\n            </footer>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    render() { \r\n        if (this.props.data){\r\n            var {email, phone, address} = this.props.data;\r\n            var {street, city, state, zip, cityname} = address;\r\n        }\r\n\r\n        return ( \r\n            <section className='contact' id='contact'>\r\n                <div>\r\n                    <h2 className='resume-title' style={{color:'#9933ff'}}>Contact Info</h2>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Email</td>\r\n                                <td> : </td>\r\n                                <td>{email}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td> : </td>\r\n                                <td>{phone}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td> : </td>\r\n                                <td>{street}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>{`${city}, ${state}, ${zip}`}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Contact;","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport $ from 'jquery';\r\nimport '../../App.css';\r\nimport './default.css';\r\nimport Header from './header';\r\nimport About from './about';\r\nimport Portfolio from './portfolio';\r\nimport Footer from './footer';\r\nimport Contact from './contact';\r\n\r\nclass MainPage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      resumeData : {},\r\n      gridtemplate : '1fr 2.5fr 1fr'\r\n    };\r\n\r\n    this.resizeWindow = this.resizeWindow.bind(this);\r\n  }\r\n\r\n  getResumeData(){\r\n    $.ajax({\r\n      url:'/resumeData.json',\r\n      dataType:'json',\r\n      cache: false,\r\n      success: function(data){\r\n        this.setState({resumeData: data});\r\n      }.bind(this),\r\n      error: function(xhr, status, err){\r\n        console.log(err);\r\n        alert(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getResumeData();\r\n    this.resizeWindow();\r\n    window.addEventListener(\"resize\", this.resizeWindow);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.removeEventListener(\"resize\", this.resizeWindow);\r\n  }\r\n\r\n  resizeWindow() {\r\n    if(window.innerWidth < 500){\r\n      this.setState({gridtemplate : '1fr 10fr 1fr'});\r\n    }\r\n    else{\r\n      this.setState({gridtemplate : '1fr 2.5fr 1fr'});\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Header></Header>\r\n        <div className='main' style={{gridTemplateColumns: this.state.gridtemplate}}>\r\n          <div className='leftEmpty'></div>\r\n          <div className='rightEmpty'></div>\r\n          <About data={this.state.resumeData.main}></About>\r\n          <Portfolio data={this.state.resumeData.resume}></Portfolio>\r\n          <Contact data={this.state.resumeData.main}></Contact>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './folder.css';\r\n\r\nclass Folder extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            list : [],\r\n            server : this.props.server\r\n        };\r\n        this.updatebasedonCurrentURL = this.updatebasedonCurrentURL.bind(this);\r\n        this.updateToNewFolder = this.updateToNewFolder.bind(this);\r\n        this.ignoreStatic = this.ignoreStatic.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.defaults.headers.common['Authorization'] = '';\r\n        this.updateToNewFolder(document.URL.substr(document.URL.indexOf(this.props.target)));\r\n        window.addEventListener('popstate', this.updatebasedonCurrentURL);\r\n    }\r\n\r\n    updatebasedonCurrentURL(e){\r\n        this.updateToNewFolder(document.URL.substr(document.URL.indexOf(this.props.target)));\r\n    }\r\n\r\n    updateToNewFolder = name => {\r\n        axios.get(this.state.server + name)\r\n        .then(res => {\r\n            if(!res.data.hasOwnProperty(\"errno\")){\r\n                var ret = res.data;\r\n                ret.sort((a,b)=>{return a.isDict == b.isDict ? 0 : a.isDict ? -1 : 1;});\r\n                this.setState({list: ret});\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    ignoreStatic(name) {\r\n        return name.substr(name.indexOf(this.props.target));\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"btn btn-primary\" onClick={()=>{\r\n                    var prev = document.URL.substring(document.URL.indexOf(this.props.target), document.URL.lastIndexOf('/'));\r\n                    if(prev == ''){\r\n                        var link = document.URL.substring(0, document.URL.lastIndexOf('/'));\r\n                        window.location.href = link;\r\n                    }\r\n                    else{\r\n                        this.updateToNewFolder(prev);\r\n                        window.history.pushState(null, null, document.URL.substring(0, document.URL.lastIndexOf('/')));\r\n                    }\r\n                }}>\r\n                    Back\r\n                </button>\r\n\r\n                {this.state.list.map(items => {\r\n                    if(items.isDict){\r\n                        return <Link className=\"itemFolder\" key={this.state.server + items.name} to={'/folder' + this.ignoreStatic(items.name)} onClick={()=>this.updateToNewFolder(this.ignoreStatic(items.name))}>{'Folder: ' + items.name.substr(items.name.lastIndexOf('/')+1)}</Link>;\r\n                    }\r\n                    else{\r\n                        return <div className=\"itemFiles\" key={this.state.server + items.name} onClick={()=>{window.open(this.state.server + items.name, '_blank')}}>{'Files: ' + items.name.substr(items.name.lastIndexOf('/')+1)}</div>;\r\n                    }\r\n                    \r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Folder;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './folder.css';\r\n\r\nclass MediaFolder extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            list : [],\r\n            server : this.props.server,\r\n            userID : null,\r\n            username : null,\r\n            email : null,\r\n            audioUrl : null,\r\n            audioTitle : null\r\n        };\r\n        this.updatebasedonCurrentURL = this.updatebasedonCurrentURL.bind(this);\r\n        this.updateToNewFolder = this.updateToNewFolder.bind(this);\r\n        this.ignoreStatic = this.ignoreStatic.bind(this);\r\n        this.testAudio = this.testAudio.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.defaults.headers.common['Authorization'] = 'Token '+localStorage.getItem('token');\r\n        this.getUserInfo();\r\n        window.addEventListener('popstate', this.updatebasedonCurrentURL);\r\n    }\r\n\r\n    getUserInfo(){\r\n        axios.get(this.state.server+'/auth/user').then(res =>{\r\n            this.setState({userID: res.data.id, username: res.data.username, email: res.data.email});\r\n            if(document.URL.indexOf(this.props.target+ '/' + res.data.username) > 0){\r\n                this.updateToNewFolder(document.URL.substr(document.URL.indexOf(this.props.target))+'/');\r\n            }\r\n            else{\r\n                this.updateToNewFolder(document.URL.substr(document.URL.indexOf(this.props.target))+'/'+res.data.username+'/');\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    testThre(name){\r\n        axios({\r\n            url: this.state.server + name, //your url\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n          }).then((response) => {\r\n             const url = window.URL.createObjectURL(new Blob([response.data] , {type: response.headers[\"content-type\"]}));\r\n             window.open(url);\r\n          });\r\n    }\r\n\r\n    updatebasedonCurrentURL(e){\r\n        this.updateToNewFolder(document.URL.substr(document.URL.indexOf(this.props.target)));\r\n    }\r\n    \r\n\r\n    updateToNewFolder = name => {\r\n        axios.get(this.state.server + name)\r\n        .then(res => {\r\n            if(!res.data.hasOwnProperty(\"errno\")){\r\n                console.log(res.data);\r\n                var ret = res.data;\r\n                ret.sort((a,b)=>{return a.isDict == b.isDict ? 0 : a.isDict ? -1 : 1;});\r\n                this.setState({list: ret});\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n        \r\n    }\r\n\r\n    ignoreStatic(name) {\r\n        return name.substr(name.indexOf(this.props.target));\r\n    }\r\n\r\n\r\n    testAudio(name){\r\n        let loading = document.getElementById('loading');\r\n        loading.style.display = 'block';\r\n        axios({\r\n            url: this.state.server + name, //your url\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n          }).then((response) => {\r\n            loading.style.display = 'none';\r\n             const url = window.URL.createObjectURL(new Blob([response.data] , {type: response.headers[\"content-type\"]}));\r\n             let audio = document.getElementById('audioControl');\r\n             audio.src = url;\r\n             audio.title = name;\r\n             audio.type = response.headers[\"content-type\"];\r\n             this.setState({audioUrl : url, audioTitle: name.substr(name.lastIndexOf('/')+1)});\r\n             audio.play();\r\n          });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"btn btn-secondary\" onClick={()=>{\r\n                    var prev = document.URL.substring(document.URL.indexOf(this.props.target), document.URL.lastIndexOf('/'));\r\n                    if(prev == ''){\r\n                        var link = document.URL.substring(0, document.URL.lastIndexOf('/'));\r\n                        window.location.href = link;\r\n                    }\r\n                    else{\r\n                        this.updateToNewFolder(prev+'/');\r\n                        window.history.pushState(null, null, document.URL.substring(0, document.URL.lastIndexOf('/')));\r\n                    }\r\n                }}>\r\n                    Back\r\n                </button>\r\n                \r\n                <div className=\"\" style={{'display': 'block'}}>\r\n                    <div class=\"spinner-border text-info\" role=\"status\" id=\"loading\" style={{'display': 'none'}}>\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <span style={{'display': 'block'}}>{this.state.audioTitle}</span>\r\n                    <audio controls=\"control\" id=\"audioControl\" src={this.state.audio} />\r\n                </div>\r\n                \r\n                    \r\n\r\n                {this.state.list.map(items => {\r\n                    if(items.isDict){\r\n                        return <Link className=\"itemFolder\" key={this.state.server + items.name} to={'/folder'+ this.ignoreStatic(items.name)} onClick={()=>this.updateToNewFolder(this.ignoreStatic(items.name))}>{'Folder: ' + items.name.substr(items.name.lastIndexOf('/')+1)}</Link>;\r\n                    }\r\n                    else{\r\n                        return <div className=\"itemFiles\" key={this.state.server + items.name} onClick={()=>{this.testThre(items.name)}}>{'Files: ' + items.name.substr(items.name.lastIndexOf('/')+1)}</div>;\r\n                    }\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MediaFolder;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Album extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n        // this.updateSongList = this.props.updateSongList;\r\n        this.album_data = this.props.album_data;\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <div className=\"card\" style={{\"width\": \"18rem\"}}>\r\n                    <img src=\"\" className=\"card-img-top\" alt=\"...\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{this.album_data.album_title}</h5>\r\n                        <p className=\"card-text\">Artist: {this.album_data.artist}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Album;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './music.css';\r\n\r\n\r\n/*\r\nthis.props:\r\nVariables:\r\n    listOfSong\r\n    currentAlbum\r\n    playType\r\n    server\r\n\r\nMethods:\r\n    getAudioInstance(instance)\r\n\r\n*/\r\nclass MusicPlayer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            listOfSong : [],\r\n            currentAlbum : 0,\r\n            musicPlayIndex : 0,\r\n            playType : this.props.playType ? this.props.playType : \"listloop\",\r\n            audioTitle : \"\",\r\n        };\r\n        this.playTargetSong = this.playTargetSong.bind(this);\r\n        this.updateStateElement = this.updateStateElement.bind(this);\r\n        this.playNext = this.playNext.bind(this);\r\n        this.pauseMusic = this.pauseMusic.bind(this);\r\n        this.playMusic = this.playMusic.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getAudioInstance(this);\r\n        \r\n        document.getElementById('audioControl').addEventListener('ended', ()=>this.playNext());\r\n        window.addEventListener('keypress', (e)=>{\r\n            if(e.keyCode == 32){\r\n                let audio = document.getElementById('audioControl');\r\n                if(audio.paused){\r\n                    audio.play();\r\n                }\r\n                else{\r\n                    audio.pause();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    updateStateElement(data){\r\n        this.setState(data);\r\n    }\r\n\r\n    pauseMusic(){\r\n        document.getElementById('audioControl').pause();\r\n    }\r\n\r\n    playMusic(){\r\n        document.getElementById('audioControl').play();\r\n    }\r\n\r\n    playNext(){\r\n        let index = this.state.musicPlayIndex;\r\n        switch(this.state.playType){\r\n            case \"listloop\":\r\n                if(this.state.listOfSong.length < index+2){\r\n                    index = -1;\r\n                }\r\n                this.playTargetSong(this.state.listOfSong[index+1]);\r\n                this.setState({musicPlayIndex: index+1});\r\n                break;\r\n            case \"shuffy\":\r\n                \r\n                break;\r\n            case \"random\":\r\n\r\n                break\r\n            case \"\":\r\n\r\n                break;\r\n            default:\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    playTargetSong(data){\r\n        let loading = document.getElementById('loading');\r\n        loading.style.display = 'block';\r\n        var foundIndex = this.state.listOfSong.findIndex(ele=>ele.id==data.id);\r\n        if(foundIndex > -1){\r\n            this.setState({musicPlayIndex: foundIndex});\r\n        }\r\n        else{\r\n            this.setState({listOfSong: this.state.listOfSong.concat([data])});\r\n        }\r\n        axios({\r\n            url: this.props.server + '/music/getSong?album_id=' + this.state.currentAlbum +'&song_id=' +data.id, //your url\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n        }).then((response) => {\r\n            loading.style.display = 'none';\r\n            const url = window.URL.createObjectURL(new Blob([response.data] , {type: response.headers[\"content-type\"]}));\r\n            let audio = document.getElementById('audioControl');\r\n            audio.src = url;\r\n            audio.title = data.song_title;\r\n            audio.type = response.headers[\"content-type\"];\r\n            this.setState({audioTitle: data.song_title});\r\n            audio.play();\r\n        }).catch(error=>this.playNext());\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"\" style={{'display': 'block'}}>\r\n                <div class=\"spinner-border text-info\" role=\"status\" id=\"loading\" style={{'display': 'none'}}>\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <span style={{'display': 'block'}}>{this.state.audioTitle}</span>\r\n                <audio controls=\"control\" id=\"audioControl\" src=\"\" type=\"audio/mpeg\"/>\r\n                <button onClick={this.playNext}>Next</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MusicPlayer;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactPlayer from 'react-player';\r\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\r\nimport 'react-jinke-music-player/assets/index.css';\r\nimport './music.css';\r\nimport Album from './music_album';\r\nimport MusicPlayer from './musicPlayer';\r\n\r\nclass Music extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.audioInstance = null;\r\n        this.state = { \r\n            userID : null,\r\n            username : null,\r\n            email : null,\r\n            listOfalbum : [],\r\n            listOfSong: [],\r\n            currentAlbum : null,\r\n            audioTitle : \"\",\r\n            audioList : [],\r\n            songList : []\r\n         };\r\n         this.getUserInfo = this.getUserInfo.bind(this);\r\n         this.getListOfAlbum = this.getListOfAlbum.bind(this);\r\n         this.getListOfSong = this.getListOfSong.bind(this);\r\n         this.playSong = this.playSong.bind(this);\r\n         this.uploadSong = this.uploadSong.bind(this);\r\n         this.getSongUrl = this.getSongUrl.bind(this);\r\n         this.updateMusicPlayerList = this.updateMusicPlayerList.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.defaults.headers.common['Authorization'] = 'Token '+localStorage.getItem('token');\r\n        this.getUserInfo();\r\n        console.log(window);\r\n    }\r\n\r\n    getUserInfo(){\r\n        axios.get(this.props.server+'/auth/user').then(res =>{\r\n            this.setState({userID: res.data.id, username: res.data.username, email: res.data.email});\r\n            this.getListOfAlbum();\r\n        });\r\n    }\r\n\r\n    getListOfAlbum(){\r\n        axios.get(this.props.server+'/music/getListOfAlbum')\r\n        .then(res=>{\r\n            this.setState({listOfalbum : res.data});\r\n        });\r\n    }\r\n\r\n    getListOfSong(album_id){\r\n        // this.audioInstance.autoplay = false;\r\n        axios.get(this.props.server + \"/music/getListOfSong?album_id=\" + album_id)\r\n        .then(res =>{\r\n            if(res.data.success){\r\n                this.setState({listOfSong: res.data.list, currentAlbum: album_id, songList: res.data.list});\r\n                this.audioInstance.updateStateElement({listOfSong : res.data.list, currentAlbum : album_id});\r\n                // this.updateMusicPlayerList(res.data.list, album_id);\r\n            }\r\n            else{\r\n                console.log(res.data.message);\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    async getSongUrl(alblum_id, song_id){\r\n        let response = await axios({\r\n            url: this.props.server + '/music/getSong?album_id=' + alblum_id +'&song_id=' +song_id,\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n        });\r\n        const url = window.URL.createObjectURL(new Blob([response.data] , {type: response.headers[\"content-type\"]}));\r\n        return url;\r\n    }\r\n\r\n    updateMusicPlayerList(list, album_id){\r\n        var songList = list.map(data=>{\r\n            return {\r\n                name: data.song_title, \r\n                song_id: data.id, \r\n                alblum_id: album_id,\r\n                musicSrc : ()=>this.getSongUrl(album_id, data.id)\r\n                // 'key' : data.song_title+data.id+album_id+Math.random(0,1000)\r\n            }\r\n        });\r\n        this.setState({audioList: songList});\r\n    }\r\n    \r\n\r\n    playSong(data){\r\n        console.log('play?');\r\n        this.audioInstance.playTargetSong(data);\r\n        // let loading = document.getElementById('loading');\r\n        // loading.style.display = 'block';\r\n        // axios({\r\n        //     url: this.props.server + '/music/getSong?album_id=' + this.state.currentAlbum +'&song_id=' +data.id, //your url\r\n        //     method: 'GET',\r\n        //     responseType: 'blob', // important\r\n        // }).then((response) => {\r\n        //     loading.style.display = 'none';\r\n        //     const url = window.URL.createObjectURL(new Blob([response.data] , {type: response.headers[\"content-type\"]}));\r\n        //     let audio = document.getElementById('audioControl');\r\n        //     audio.src = url;\r\n        //     audio.title = data.song_title;\r\n        //     audio.type = response.headers[\"content-type\"];\r\n        //     // this.setState({audioUrl : url, audioTitle: name.substr(name.lastIndexOf('/')+1)});\r\n        //     audio.play();\r\n        // });\r\n\r\n\r\n        // var newSongList = [this.state.songList.find(s=>s.id==data.id)];\r\n        // newSongList = newSongList.concat(this.state.songList.filter(song=>song.id!=data.id));\r\n        // this.setState({songList: newSongList});\r\n        // // this.audioInstance.autoplay = true;\r\n        // this.updateMusicPlayerList(newSongList, this.state.currentAlbum);\r\n    }\r\n\r\n\r\n    uploadSong(data){\r\n        if(data.audio_file == null){\r\n            alert('file cannot be empty');\r\n            return ;\r\n        }\r\n        var formData = new FormData();\r\n        formData.append(\"song_title\", data.song_title == \"\" ? data.audio_file.name : data.song_title);\r\n        formData.append(\"audio_file\", data.audio_file);\r\n        axios({\r\n            url: this.props.server+'/music/uploadSong?album_id=' + this.state.currentAlbum,\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'multipart/form-data' },\r\n            data: formData\r\n        }).then((res) => {\r\n            if(res.data.success){\r\n                this.getListOfSong(this.state.currentAlbum);\r\n            }\r\n            else{\r\n                alert('file upload failed! \\n Message: ' + res.data.message);\r\n            }\r\n        });\r\n    } \r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <div>\r\n                    {this.state.listOfalbum.map(data => {\r\n                        return <div className=\"music_album_items\" key={data.id+data.album_title+Math.random(0,10000)} onClick={()=>this.getListOfSong(data.id)}><Album album_data={data}/></div>\r\n                    })}\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                    Upload Song\r\n                </button>\r\n                {/* <ReactJkMusicPlayer \r\n                    getAudioInstance={instance=>this.audioInstance=instance} \r\n                    spaceBar={true} \r\n                    theme=\"light\" \r\n                    autoPlay={true}\r\n                    mode=\"full\" \r\n                    clearPriorAudioLists={true}\r\n                    glassBg={true}\r\n                    defaultPlayMode=\"orderLoop\"\r\n                    preload=\"auto\"\r\n                    // audioLists={this.state.audioList}\r\n                    audioLists={[{musicSrc:  ()=>this.getSongUrl(1,10)}]}\r\n                /> */}\r\n\r\n                <MusicPlayer \r\n                    playType=\"listloop\"\r\n                    server={this.props.server}\r\n                    getAudioInstance={instance=>this.audioInstance=instance}\r\n                />\r\n\r\n                <div>\r\n                    \r\n                    <div className=\"list-group\">\r\n                        {\r\n                            this.state.listOfSong.map(data => {\r\n                                return <div type=\"button\" key={data + Math.random(0,10000)} className=\"list-group-item list-group-item-action\" onClick={()=>this.playSong(data)}>Song title: {data.song_title}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form id=\"upload_song_form\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"form_song_title\">Song title</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"form_song_title\" aria-describedby=\"songHelper\"/>\r\n                                    <small id=\"songHelper\" class=\"form-text text-muted\">Song Title is not relate to your filename.</small>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"form_audio_file\">Audio_file</label>\r\n                                    <input type=\"file\" class=\"form-control\" id=\"form_audio_file\" required/>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={()=>{\r\n                                this.uploadSong({\r\n                                    'song_title': document.getElementById('form_song_title').value,\r\n                                    'audio_file': document.getElementById('form_audio_file').files[0]\r\n                            });\r\n                            }}>Upload</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Music;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Folder from './folder';\r\nimport MediaFolder from './mediaFolder';\r\nimport Music from './music';\r\n\r\nclass FolderMain extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            // server : 'https://gcpf1.mattpan.com/api'\r\n            server : this.props.server\r\n         }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    // Temp Login Method\r\n    tempLogin(username, password){\r\n        axios.post( this.state.server + '/auth/login', {\r\n            'username': username,\r\n            'password' : password\r\n        }).then(res => {\r\n            if(res.data.token){\r\n                localStorage.setItem('token', res.data.token);\r\n            }\r\n            else{\r\n                alert(\"username or password is incorrect!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <Link class=\"navbar-brand\" >Folder</Link>\r\n                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul class=\"navbar-nav mr-auto\">\r\n                            <li class=\"nav-item active\">\r\n                                <Link class=\"nav-link\" to=\"/folder/public\" >Public <span class=\"sr-only\">(current)</span></Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" to=\"/folder/media\">Media</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" to=\"/folder/music\">Music</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul class=\"navbar-nav my-2 my-lg-0\">\r\n                            <li>\r\n                                <Link className=\"btn btn-primary\" to=\"/login\">Login</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link className=\"btn btn-secondary\" to=\"/folder/public\" onClick={()=>{\r\n                                    localStorage.removeItem('token');\r\n                                    axios.defaults.headers.common['Authorization'] = ''}}>LogOut</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n\r\n                <Switch>\r\n                    <Route path='/folder/media/(.*)?' render={(props)=><MediaFolder {...props} target=\"/media\" server={this.state.server} />}/>\r\n                    <Route path='/folder/public/(.*)?' render={(props)=><Folder {...props} target=\"/public\" server={this.state.server} />}/>\r\n                    <Route path='/folder/music/(.*)?' render={(props)=><Music {...props} server={this.state.server} />} />\r\n                </Switch>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default FolderMain;","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n        this.processLogin = this.processLogin.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.defaults.headers.common['Authorization'] = '';\r\n    }\r\n\r\n    processLogin(){\r\n        axios.post(this.props.server + '/auth/login', {\r\n            'username': document.getElementById('username').value,\r\n            'password' : document.getElementById('password').value\r\n        }).then(res => {\r\n            if(res.data.token){\r\n                localStorage.setItem('token', res.data.token);\r\n                window.history.back();\r\n            }\r\n            else{\r\n                document.getElementById('login-message').value = \"username or password is incorrect!\";\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n        <div>\r\n            <div className=\"login-item\">\r\n                <label>Username: </label>\r\n                <input id=\"username\"></input>\r\n            </div>\r\n            <div className=\"login-item\">\r\n                <label>Password: </label>\r\n                <input id=\"password\" type=\"password\"></input>\r\n            </div>\r\n            <button className=\"login-button btn btn-primary\" onClick={this.processLogin}>Login</button>\r\n            <span className=\"login-message\" id=\"login-message\"></span>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default Login;","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport './App.css';\r\nimport './components/main/default.css';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport MainPage from './components/main/mainpage.js';\r\nimport FolderMain from './components/folder/main';\r\nimport Login from './components/main/login';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      server : 'https://homepc.mattpan.com:5443/api'\r\n    }\r\n    ReactGA.initialize('UA-156169363-1');\r\n    ReactGA.pageview(window.location.pathname);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path='/' component={MainPage}/>\r\n          <Route path='/login' render={(props)=><Login {...props} server={this.state.server} />}></Route>\r\n          <Route path='/folder/(.*)?' render={(props)=><FolderMain {...props} server={this.state.server} />}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n    <App />\r\n</BrowserRouter>\r\n\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}