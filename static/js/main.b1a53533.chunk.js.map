{"version":3,"sources":["components/main/header.js","components/main/about.js","components/main/portfolio.js","components/main/footer.js","components/main/contact.js","components/main/mainpage.js","components/folder/folder.js","components/folder/mediaFolder.js","components/folder/music_album.js","components/folder/musicPlayer.js","components/folder/music.js","components/folder/privateRouter.js","components/folder/main.js","components/main/login.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","message","count","window","addEventListener","document","getElementById","classList","remove","id","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","to","Component","About","this","data","name","resumedownload","profilepic","bio","email","occupation","cityname","address","social","map","ele","key","url","style","fontSize","display","Portfolio","education","school","degree","graduated","GPA","GPA_scale","description","work","company","color","title","years","skills","level","toLowerCase","margin","Footer","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","Contact","phone","street","city","zip","MainPage","resumeData","gridtemplate","resizeWindow","bind","$","ajax","dataType","cache","success","setState","error","xhr","status","err","console","log","alert","getResumeData","removeEventListener","innerWidth","gridTemplateColumns","main","resume","Folder","updateToNewFolder","axios","get","server","then","res","hasOwnProperty","ret","sort","a","b","isDict","list","catch","updatebasedonCurrentURL","ignoreStatic","URL","substr","indexOf","target","e","onClick","prev","substring","lastIndexOf","link","location","history","pushState","items","open","MediaFolder","userID","username","audioUrl","audioTitle","testAudio","defaults","headers","common","localStorage","getItem","getUserInfo","method","responseType","response","createObjectURL","Blob","loading","audio","src","play","class","role","controls","testThre","Album","album_data","alt","album_title","artist","MusicPlayer","listOfSong","currentAlbum","musicPlayIndex","playType","playStatus","audioControlName","currentTime","duration","audioHaveControl","playTargetSong","updateStateElement","playNext","pauseMusic","playMusic","shufflePlayList","toHrMinSec","getAudioTitle","getAudioInstance","playhead","timeline","onMouseUp","event","clickPercent","onMouseMove","moveplayhead","clientX","getPosition","offsetWidth","newMargLeft","marginLeft","el","getBoundingClientRect","left","playPercent","keyCode","paused","album_id","pause","time","hrs","mins","secs","shuffleList","i","length","j","Math","floor","random","index","foundIndex","findIndex","concat","song_title","updatePlayType","draggable","Music","audioInstance","listOfalbum","audioList","songList","actionMessage","actionFun","refershList","getListOfAlbum","getListOfSong","uploadSong","getSongUrl","deleteSong","newList","updateListOfSound","alblum_id","song_id","formData","FormData","append","audio_file","youtube_link","instance","tabIndex","aria-labelledby","aria-hidden","data-dismiss","htmlFor","aria-describedby","required","value","files","PrivateRoute","component","isLogin","rest","render","FolderMain","userid","testUserToken","password","post","token","setItem","removeItem","path","Login","processLogin","body","backgroundColor","back","placeholder","App","ReactGA","initialize","pageview","pathname","exact","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1a53533.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Navbar, NavDropdown, Nav  } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            message : ``,\r\n            count: 0    \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('click', ()=>{\r\n            if(document.getElementById('navbarSupportedContent') != null){\r\n                document.getElementById('navbarSupportedContent').classList.remove('show');\r\n            }\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <nav id='navbar' className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <button id='nav-toggler' className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#about\">About <span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#portfolio\">Portfolio</a>\r\n                            </li>\r\n                            <li className='nav-item'>\r\n                                <a className=\"nav-link\" href=\"#contact\">Contact</a>\r\n                            </li>\r\n                            <li className='nav-item'>\r\n                                <Link className=\"nav-link\" to=\"/app/public\">Apps</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass About extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    render() { \r\n        if(this.props.data){\r\n            var {name, profilepic, bio, email, resumedownload, occupation} = this.props.data;\r\n            var cityname = this.props.data.address.cityname;\r\n            var social = this.props.data.social.map(ele => {\r\n                return <a key={ele.name} className='link' href={ele.url}>{ele.name} <i className={ele.className} style={{fontSize:'30px'}}></i></a>\r\n            });\r\n        }\r\n\r\n        return ( \r\n            <section className='about' id='about'>\r\n                <div className='intro'>\r\n                    <h1 style={{fontSize: '50px'}}>{name}</h1>\r\n                    <p className='lightdark'>{occupation}  in  {cityname}</p>\r\n                    <p>\r\n\r\n                    </p>\r\n                    <div style={{display: 'inline'}}>{social}</div>\r\n                    <a className='btn btn-info download' href={resumedownload}><i className=\"fa fa-download\" style={{fontSize:'30px'}}></i> Download Resume</a>\r\n                </div>\r\n            </section>\r\n         );\r\n    }\r\n}\r\n \r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    render() { \r\n        if(this.props.data){\r\n            var education = this.props.data.education.map(function(education){\r\n                return <div key={education.school}>\r\n                            <h3>{education.school}</h3>\r\n                            <p className=\"info\">\r\n                                <em>{education.degree}</em><br/>\r\n                                <span className=\"date\">{education.graduated}</span><br/>\r\n                                <span className=\"date\">GPA: {education.GPA} / {education.GPA_scale}</span>\r\n                            </p>\r\n                            <p>{education.description}</p>\r\n                        </div>\r\n            })\r\n            var work = this.props.data.work.map(function(work){\r\n                return <div key={work.company} className='experience-section'>\r\n                            <h3>{work.company}</h3>\r\n                            <p className=\"info\"><em style={{color: 'lightslategrey'}}>{work.title}</em><br/><span className=\"date\">{work.years}</span></p>\r\n                            <p className='description'>{work.description}</p>\r\n                        </div>\r\n            })\r\n            var skills = this.props.data.skills.map(function(skills){\r\n                var btntype = skills.level <= 30 ? 'btn-outline-info ' : skills.level <= 60 ? 'btn-outline-danger ' : 'btn-outline-success ';\r\n                var className = 'btn '+ btntype +skills.name.toLowerCase();\r\n                return <div key={skills.name} className={className} style={{margin: '0 10px 10px 0'}}><strong>{skills.name}</strong></div>\r\n            })\r\n        }\r\n\r\n        return (  \r\n            <section className='portfolio' id='portfolio'>\r\n                <div className='resume-section'>\r\n                    <h2 className='resume-title' style={{color: '#6699ff'}}>Education:</h2>\r\n\r\n                    <div>{education}</div>\r\n                </div>\r\n\r\n                <div className='resume-section'>\r\n                    <h2 className='resume-title' style={{color: '#ff9966'}}><span>Experience:</span></h2>\r\n\r\n                    <div>{work}</div>\r\n                </div>\r\n\r\n                <div className='resume-section'>\r\n                    <h2 className='resume-title' style={{color: '#00ff99'}}>Skills:</h2>\r\n\r\n                    <div>{skills}</div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Portfolio;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        var today = `${mm}/${dd}/${yyyy}`;\r\n\r\n        return ( \r\n            <footer className='footer'>\r\n                <p>Posted by: Matthew Pan - Date: {today} - Website: <a href='https://www.mattpan.com'>www.mattpan.com</a></p>\r\n            </footer>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    render() { \r\n        if (this.props.data){\r\n            var {email, phone, address} = this.props.data;\r\n            var {street, city, state, zip, cityname} = address;\r\n        }\r\n\r\n        return ( \r\n            <section className='contact' id='contact'>\r\n                <div>\r\n                    <h2 className='resume-title' style={{color:'#9933ff'}}>Contact Info</h2>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Email</td>\r\n                                <td> : </td>\r\n                                <td>{email}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Phone</td>\r\n                                <td> : </td>\r\n                                <td>{phone}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Address</td>\r\n                                <td> : </td>\r\n                                <td>{street}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>{`${city}, ${state}, ${zip}`}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </section>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Contact;","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport $ from 'jquery';\r\nimport '../../App.css';\r\nimport './default.css';\r\nimport Header from './header';\r\nimport About from './about';\r\nimport Portfolio from './portfolio';\r\nimport Footer from './footer';\r\nimport Contact from './contact';\r\n\r\nclass MainPage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      resumeData : {},\r\n      gridtemplate : '1fr 2.5fr 1fr'\r\n    };\r\n\r\n    this.resizeWindow = this.resizeWindow.bind(this);\r\n  }\r\n\r\n  getResumeData(){\r\n    $.ajax({\r\n      url:'/resumeData.json',\r\n      dataType:'json',\r\n      cache: false,\r\n      success: function(data){\r\n        this.setState({resumeData: data});\r\n      }.bind(this),\r\n      error: function(xhr, status, err){\r\n        console.log(err);\r\n        alert(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getResumeData();\r\n    this.resizeWindow();\r\n    window.addEventListener(\"resize\", this.resizeWindow);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.removeEventListener(\"resize\", this.resizeWindow);\r\n  }\r\n\r\n  resizeWindow() {\r\n    if(window.innerWidth < 500){\r\n      this.setState({gridtemplate : '1fr 10fr 1fr'});\r\n    }\r\n    else{\r\n      this.setState({gridtemplate : '1fr 2.5fr 1fr'});\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Header></Header>\r\n        <div className='main' style={{gridTemplateColumns: this.state.gridtemplate}}>\r\n          <div className='leftEmpty'></div>\r\n          <div className='rightEmpty'></div>\r\n          <About data={this.state.resumeData.main}></About>\r\n          <Portfolio data={this.state.resumeData.resume}></Portfolio>\r\n          <Contact data={this.state.resumeData.main}></Contact>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './folder.css';\r\n\r\nclass Folder extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            list : [],\r\n            server : this.props.server\r\n        };\r\n        this.updatebasedonCurrentURL = this.updatebasedonCurrentURL.bind(this);\r\n        this.updateToNewFolder = this.updateToNewFolder.bind(this);\r\n        this.ignoreStatic = this.ignoreStatic.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateToNewFolder(document.URL.substr(document.URL.indexOf(this.props.target)));\r\n        window.addEventListener('popstate', this.updatebasedonCurrentURL);\r\n    }\r\n\r\n    updatebasedonCurrentURL(e){\r\n        this.updateToNewFolder(document.URL.substr(document.URL.indexOf(this.props.target)));\r\n    }\r\n\r\n    updateToNewFolder = name => {\r\n        axios.get(this.state.server + name)\r\n        .then(res => {\r\n            if(!res.data.hasOwnProperty(\"errno\")){\r\n                var ret = res.data;\r\n                ret.sort((a,b)=>{return a.isDict == b.isDict ? 0 : a.isDict ? -1 : 1;});\r\n                this.setState({list: ret});\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    ignoreStatic(name) {\r\n        return name.substr(name.indexOf(this.props.target));\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"btn btn-primary\" onClick={()=>{\r\n                    var prev = document.URL.substring(document.URL.indexOf(this.props.target), document.URL.lastIndexOf('/'));\r\n                    if(prev == ''){\r\n                        var link = document.URL.substring(0, document.URL.lastIndexOf('/'));\r\n                        window.location.href = link;\r\n                    }\r\n                    else{\r\n                        this.updateToNewFolder(prev);\r\n                        window.history.pushState(null, null, document.URL.substring(0, document.URL.lastIndexOf('/')));\r\n                    }\r\n                }}>\r\n                    Back\r\n                </button>\r\n\r\n                {this.state.list.map(items => {\r\n                    if(items.isDict){\r\n                        return <Link className=\"itemFolder\" key={this.state.server + items.name} to={'/app' + this.ignoreStatic(items.name)} onClick={()=>this.updateToNewFolder(this.ignoreStatic(items.name))}>{'Folder: ' + items.name.substr(items.name.lastIndexOf('/')+1)}</Link>;\r\n                    }\r\n                    else{\r\n                        return <div className=\"itemFiles\" key={this.state.server + items.name} onClick={()=>{window.open(this.state.server + items.name, '_blank')}}>{'Files: ' + items.name.substr(items.name.lastIndexOf('/')+1)}</div>;\r\n                    }\r\n                    \r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Folder;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './folder.css';\r\n\r\nclass MediaFolder extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            list : [],\r\n            server : this.props.server,\r\n            userID : null,\r\n            username : null,\r\n            email : null,\r\n            audioUrl : null,\r\n            audioTitle : null\r\n        };\r\n        this.updatebasedonCurrentURL = this.updatebasedonCurrentURL.bind(this);\r\n        this.updateToNewFolder = this.updateToNewFolder.bind(this);\r\n        this.ignoreStatic = this.ignoreStatic.bind(this);\r\n        this.testAudio = this.testAudio.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.defaults.headers.common['Authorization'] = 'Token '+localStorage.getItem('token');\r\n        this.getUserInfo();\r\n        window.addEventListener('popstate', this.updatebasedonCurrentURL);\r\n    }\r\n\r\n    getUserInfo(){\r\n        axios.get(this.state.server+'/auth/user').then(res =>{\r\n            this.setState({userID: res.data.id, username: res.data.username, email: res.data.email});\r\n            if(document.URL.indexOf(this.props.target+ '/' + res.data.username) > 0){\r\n                this.updateToNewFolder(document.URL.substr(document.URL.indexOf(this.props.target))+'/');\r\n            }\r\n            else{\r\n                this.updateToNewFolder(document.URL.substr(document.URL.indexOf(this.props.target))+'/'+res.data.username+'/');\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    testThre(name){\r\n        axios({\r\n            url: this.state.server + name, //your url\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n          }).then((response) => {\r\n             const url = window.URL.createObjectURL(new Blob([response.data] , {type: response.headers[\"content-type\"]}));\r\n             window.open(url);\r\n          });\r\n    }\r\n\r\n    updatebasedonCurrentURL(e){\r\n        this.updateToNewFolder(document.URL.substr(document.URL.indexOf(this.props.target)));\r\n    }\r\n    \r\n\r\n    updateToNewFolder = name => {\r\n        axios.get(this.state.server + name)\r\n        .then(res => {\r\n            if(!res.data.hasOwnProperty(\"errno\")){\r\n                console.log(res.data);\r\n                var ret = res.data;\r\n                ret.sort((a,b)=>{return a.isDict == b.isDict ? 0 : a.isDict ? -1 : 1;});\r\n                this.setState({list: ret});\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n        \r\n    }\r\n\r\n    ignoreStatic(name) {\r\n        return name.substr(name.indexOf(this.props.target));\r\n    }\r\n\r\n\r\n    testAudio(name){\r\n        let loading = document.getElementById('loading');\r\n        loading.style.display = 'block';\r\n        axios({\r\n            url: this.state.server + name, //your url\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n          }).then((response) => {\r\n            loading.style.display = 'none';\r\n             const url = window.URL.createObjectURL(new Blob([response.data] , {type: response.headers[\"content-type\"]}));\r\n             let audio = document.getElementById('audioControl');\r\n             audio.src = url;\r\n             audio.title = name;\r\n             audio.type = response.headers[\"content-type\"];\r\n             this.setState({audioUrl : url, audioTitle: name.substr(name.lastIndexOf('/')+1)});\r\n             audio.play();\r\n          });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"btn btn-secondary\" onClick={()=>{\r\n                    var prev = document.URL.substring(document.URL.indexOf(this.props.target), document.URL.lastIndexOf('/'));\r\n                    if(prev == ''){\r\n                        var link = document.URL.substring(0, document.URL.lastIndexOf('/'));\r\n                        window.location.href = link;\r\n                    }\r\n                    else{\r\n                        this.updateToNewFolder(prev+'/');\r\n                        window.history.pushState(null, null, document.URL.substring(0, document.URL.lastIndexOf('/')));\r\n                    }\r\n                }}>\r\n                    Back\r\n                </button>\r\n                \r\n                <div className=\"\" style={{'display': 'block'}}>\r\n                    <div class=\"spinner-border text-info\" role=\"status\" id=\"loading\" style={{'display': 'none'}}>\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                    <span style={{'display': 'block'}}>{this.state.audioTitle}</span>\r\n                    <audio controls=\"control\" id=\"audioControl\" src={this.state.audio} />\r\n                </div>\r\n                \r\n                    \r\n\r\n                {this.state.list.map(items => {\r\n                    if(items.isDict){\r\n                        return <Link className=\"itemFolder\" key={this.state.server + items.name} to={'/folder'+ this.ignoreStatic(items.name)} onClick={()=>this.updateToNewFolder(this.ignoreStatic(items.name))}>{'Folder: ' + items.name.substr(items.name.lastIndexOf('/')+1)}</Link>;\r\n                    }\r\n                    else{\r\n                        return <div className=\"itemFiles\" key={this.state.server + items.name} onClick={()=>{this.testThre(items.name)}}>{'Files: ' + items.name.substr(items.name.lastIndexOf('/')+1)}</div>;\r\n                    }\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MediaFolder;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Album extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n        // this.updateSongList = this.props.updateSongList;\r\n        this.album_data = this.props.album_data;\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <div className=\"card\" style={{\"width\": \"18rem\"}}>\r\n                    <img src=\"\" className=\"card-img-top\" alt=\"...\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{this.album_data.album_title}</h5>\r\n                        <p className=\"card-text\">Artist: {this.album_data.artist}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Album;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './music.css';\r\n\r\n\r\n/*\r\nthis.props:\r\nVariables:\r\n    listOfSong\r\n    currentAlbum\r\n    playType\r\n    server\r\n\r\nMethods:\r\n    getAudioInstance(instance)\r\n\r\n*/\r\nclass MusicPlayer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            listOfSong : [],\r\n            currentAlbum : 0,\r\n            musicPlayIndex : 0,\r\n            playType : this.props.playType ? this.props.playType : \"listloop\",\r\n            audioTitle : \"\",\r\n            playStatus : false,\r\n            audioControlName : 'audioControl',\r\n            currentTime: 0,\r\n            duration: 0,\r\n            audioHaveControl: true\r\n        };\r\n        this.playTargetSong = this.playTargetSong.bind(this);\r\n        this.updateStateElement = this.updateStateElement.bind(this);\r\n        this.playNext = this.playNext.bind(this);\r\n        this.pauseMusic = this.pauseMusic.bind(this);\r\n        this.playMusic = this.playMusic.bind(this);\r\n        this.shufflePlayList = this.shufflePlayList.bind(this);\r\n        this.toHrMinSec = this.toHrMinSec.bind(this);\r\n        this.getAudioTitle = this.getAudioTitle.bind(this);\r\n        this.setState = this.setState.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getAudioInstance(this);\r\n        let audio = document.getElementById(this.state.audioControlName);\r\n        let playhead = document.getElementById('playhead');\r\n        let timeline = document.getElementById('timeline');\r\n        let setState = this.setState;\r\n\r\n        audio.addEventListener('ended', ()=>this.playNext());\r\n        // audio.addEventListener('error', ()=>this.playNext());\r\n        audio.addEventListener('timeupdate', ()=>{\r\n            if(this.state.audioHaveControl){\r\n                var playPercent = 100 * (audio.currentTime / audio.duration);\r\n                playhead.style.marginLeft = playPercent + \"%\";\r\n                this.setState({currentTime: audio.currentTime, duration: audio.duration});\r\n            }\r\n        });\r\n        window.addEventListener('keypress', (e)=>{\r\n            if(e.keyCode == 32){\r\n                if(audio.paused){\r\n                    this.playMusic();\r\n                }\r\n                else{\r\n                    this.pauseMusic();\r\n                }\r\n            }\r\n        });\r\n\r\n        timeline.addEventListener(\"click\", function (event) {\r\n            moveplayhead(event);\r\n            audio.currentTime = audio.duration * clickPercent(event);\r\n        }, false);\r\n\r\n        playhead.addEventListener(\"dragstart\", function (event) {\r\n            setState({audioHaveControl: false});\r\n\r\n            playhead.addEventListener('drag', onMouseMove);\r\n            playhead.addEventListener('dragend', onMouseUp);\r\n        }, false);\r\n\r\n        function onMouseUp(event){\r\n            audio.currentTime = audio.duration * clickPercent(event);\r\n            setState({audioHaveControl: true});\r\n\r\n            playhead.removeEventListener('dragend', onMouseUp);\r\n            playhead.removeEventListener('drag', onMouseMove);\r\n        }\r\n\r\n        function onMouseMove(event){\r\n            moveplayhead(event);\r\n        }\r\n\r\n        \r\n        // returns click as decimal (.77) of the total timelineWidth\r\n        function clickPercent(event) {\r\n            return (event.clientX - getPosition(timeline)) / timeline.offsetWidth;\r\n        }\r\n        \r\n        function moveplayhead(event) {\r\n            var newMargLeft = event.clientX - getPosition(timeline);\r\n            newMargLeft = newMargLeft < 0 ? 0 : newMargLeft > timeline.offsetWidth ? timeline.offsetWidth : newMargLeft;\r\n            playhead.style.marginLeft = newMargLeft + \"px\";\r\n            setState({currentTime : (newMargLeft/timeline.offsetWidth)*audio.duration});\r\n        }\r\n        \r\n        // getPosition\r\n        // Returns elements left position relative to top-left of viewport\r\n        function getPosition(el) {\r\n            return el.getBoundingClientRect().left;\r\n        }\r\n    }\r\n\r\n    updateStateElement(data){\r\n        this.setState(data);\r\n    }\r\n\r\n    updateListOfSound(data, album_id){\r\n        this.setState({listOfSong: data, musicPlayIndex: 0, currentAlbum: album_id});\r\n        if(this.state.playType == \"shuffle\"){\r\n            this.shufflePlayList();\r\n        }\r\n        this.playTargetSong(this.state.listOfSong[0], false);\r\n    }\r\n\r\n    // Types: listloop, loop, random\r\n    updatePlayType(type){\r\n        this.setState({playType : type});\r\n    }\r\n\r\n    pauseMusic(){\r\n        document.getElementById(this.state.audioControlName).pause();\r\n        this.setState({playStatus: false});\r\n    }\r\n\r\n    playMusic(){\r\n        document.getElementById(this.state.audioControlName).play();\r\n        this.setState({playStatus: true});\r\n    }\r\n\r\n    toHrMinSec(time){\r\n        var hrs = ~~(time / 3600);\r\n        var mins = ~~((time % 3600) / 60);\r\n        var secs = ~~time % 60;\r\n\r\n        // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\r\n        var ret = \"\";\r\n\r\n        if (hrs > 0) {\r\n            ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\r\n        }\r\n\r\n        ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\r\n        ret += \"\" + secs;\r\n        return ret;\r\n    }\r\n\r\n    shufflePlayList(){\r\n        let shuffleList = this.state.listOfSong;\r\n        // Fisher–Yates shuffle\r\n        for (let i = shuffleList.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            [shuffleList[i], shuffleList[j]] = [shuffleList[j], shuffleList[i]];\r\n        }\r\n        this.setState({listOfSong : shuffleList});\r\n    }\r\n\r\n    playNext(){\r\n        let index = this.state.musicPlayIndex;\r\n        switch(this.state.playType){\r\n            case \"listloop\":\r\n                if(this.state.listOfSong.length < index+2){\r\n                    index = -1;\r\n                }\r\n                break;\r\n            case \"shuffle\":\r\n                // if(index < 0){\r\n                //     this.shufflePlayList();\r\n                // }\r\n                // this.playTargetSong(this.state.listOfSong[index+1]);\r\n                // this.setState({musicPlayIndex: index+1});\r\n                break;\r\n            case \"random\":\r\n                index = (Math.random() * this.state.listOfSong.length) << 0;\r\n                while(this.state.listOfSong.length > 1 && index == this.state.musicPlayIndex){\r\n                    index = (Math.random() * this.state.listOfSong.length) << 0;\r\n                }\r\n                index -= 1;\r\n                break;\r\n            case \"loop\":\r\n                index -= 1;\r\n                break;\r\n            default:\r\n\r\n                break;\r\n        }\r\n        this.playTargetSong(this.state.listOfSong[index+1], true);\r\n    }\r\n\r\n    playTargetSong(data, play){\r\n        let loading = document.getElementById('loading');\r\n        loading.style.display = 'block';\r\n        var foundIndex = this.state.listOfSong.findIndex(ele=>ele.id==data.id);\r\n        if(foundIndex > -1){\r\n            this.setState({musicPlayIndex: foundIndex});\r\n        }\r\n        else{\r\n            this.setState({listOfSong: this.state.listOfSong.concat([data]), musicPlayIndex: this.state.listOfSong.length-1});\r\n        }\r\n        data.src().then((response) => {\r\n            loading.style.display = 'none';\r\n            let audio = document.getElementById(this.state.audioControlName);\r\n            audio.src = response.url;\r\n            audio.title = data.song_title;\r\n            audio.type = response.type;\r\n            this.setState({audioTitle: data.song_title, playStatus: play});\r\n            if(play) audio.play();\r\n        }).catch(error=>this.playNext());\r\n    }\r\n\r\n    getAudioTitle(){\r\n        return this.state.audioTitle;\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container\" id=\"music_player_container\">\r\n                <div className=\"row spinner-border text-info\" role=\"status\" id=\"loading\" style={{'display': 'none'}}>\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <span className=\"row musci_player_element\">{this.state.audioTitle}</span>\r\n                <audio className=\"row musci_player_element\" id={this.state.audioControlName} src=\"\" type=\"audio/mpeg\"/>\r\n                <div className=\"row musci_player_element\">\r\n                    <div className=\"btn-group btn-group-toggle col-lg-8\" >\r\n                        <div className=\"btn btn-secondary active col-lg-0.5\">\r\n                            {\r\n                                this.state.playType == 'listloop' ?\r\n                                <div type=\"radio\" onClick={()=>this.updatePlayType('random')}><i className='fas fa-redo-alt music_icon'></i></div>\r\n                                : this.state.playType == 'random' ? \r\n                                <div type=\"radio\" onClick={()=>this.updatePlayType('loop')}><i className='fas fa-random music_icon'></i></div>\r\n                                : <div type=\"radio\" onClick={()=>this.updatePlayType('listloop')}><i className='fas fa-sync-alt music_icon'></i></div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"btn btn-secondary col-lg-0.5\">\r\n                            <div type=\"radio\" onClick={()=>{\r\n                                    if(this.state.playType == 'random') this.playNext();\r\n                                    else{\r\n                                        let index = this.state.musicPlayIndex;\r\n                                        index = index > 0 ? index-1 : this.state.listOfSong.length - 1\r\n                                        this.playTargetSong(this.state.listOfSong[index], true);\r\n                                    }\r\n                            }}><i className='fas fa-backward music_icon'></i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn btn-secondary col-lg-0.5\">\r\n                            <div type=\"radio\" onClick={()=>{\r\n                                    if(this.state.playStatus) this.pauseMusic();\r\n                                    else this.playMusic();\r\n                            }}><i className={this.state.playStatus ? 'fas fa-pause music_icon' : 'fas fa-play music_icon'}></i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn btn-secondary col-lg-0.5\">\r\n                            <div type=\"radio\" onClick={()=>{\r\n                                if(this.state.playType == 'loop'){\r\n                                    let index = this.state.musicPlayIndex;\r\n                                    index = index < this.state.listOfSong.length - 1 ? index+1 : 0\r\n                                    this.playTargetSong(this.state.listOfSong[index], true);\r\n                                }else{\r\n                                    this.playNext();\r\n                                }\r\n                            }}><i className='fas fa-forward music_icon'></i>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn btn-secondary col col-lg-10\">\r\n                            <div className=\"col col-lg-3\" id=\"displaytime\" style={{'display': 'inline-block'}}>\r\n                                {this.toHrMinSec(this.state.currentTime) + ' / ' + this.toHrMinSec(this.state.duration)}\r\n                            </div>\r\n                            <div className=\"col col-lg-8\" id=\"timeline\" >\r\n                                <div id=\"playhead\" draggable='true'></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MusicPlayer;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactPlayer from 'react-player';\r\nimport './music.css';\r\nimport Album from './music_album';\r\nimport MusicPlayer from './musicPlayer';\r\n\r\nclass Music extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.audioInstance = null;\r\n        this.state = { \r\n            listOfalbum : [],\r\n            listOfSong: [],\r\n            currentAlbum : null,\r\n            audioTitle : \"\",\r\n            audioList : [],\r\n            songList : [],\r\n            actionMessage : \"\",\r\n            actionFun : ()=>{},\r\n            refershList : false\r\n         };\r\n         this.getListOfAlbum = this.getListOfAlbum.bind(this);\r\n         this.getListOfSong = this.getListOfSong.bind(this);\r\n         this.uploadSong = this.uploadSong.bind(this);\r\n         this.getSongUrl = this.getSongUrl.bind(this);\r\n         this.deleteSong = this.deleteSong.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.defaults.headers.common['Authorization'] = 'Token '+localStorage.getItem('token');\r\n        this.getListOfAlbum();\r\n    }\r\n\r\n    getListOfAlbum(){\r\n        axios.get(this.props.server+'/music/getListOfAlbum')\r\n        .then(res=>{\r\n            this.setState({listOfalbum : res.data});\r\n        });\r\n    }\r\n\r\n    getListOfSong(album_id){\r\n        axios.get(this.props.server + \"/music/getListOfSong?album_id=\" + album_id)\r\n        .then(res =>{\r\n            if(res.data.success){\r\n                let newList = res.data.list.map(data =>{\r\n                    data['src'] = ()=>this.getSongUrl(album_id,data.id);\r\n                    return data;\r\n                });\r\n                this.setState({listOfSong: res.data.list, currentAlbum: album_id, songList: res.data.list});\r\n                this.audioInstance.updateListOfSound(newList, album_id);\r\n            }\r\n            else{\r\n                console.log(res.data.message);\r\n            }\r\n        });\r\n    }\r\n\r\n    async getSongUrl(alblum_id, song_id){\r\n        let response = await axios({\r\n            url: this.props.server + '/music/getSong?album_id=' + alblum_id +'&song_id=' +song_id,\r\n            method: 'GET',\r\n            responseType: 'blob', // important\r\n        });\r\n        const url = window.URL.createObjectURL(new Blob([response.data] , {type: response.headers[\"content-type\"]}));\r\n        return {'url': url, 'type': response.headers[\"content-type\"]};\r\n    }\r\n\r\n\r\n    uploadSong(data){\r\n        var formData = new FormData();\r\n        formData.append(\"song_title\", data.song_title == \"\" ? (data.audio_file ? data.audio_file.name : \"\" ) : data.song_title);\r\n        formData.append(\"youtube_link\", data.youtube_link);\r\n        formData.append(\"audio_file\", data.audio_file);\r\n        axios({\r\n            url: this.props.server+'/music/uploadSong?album_id=' + this.state.currentAlbum,\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'multipart/form-data' },\r\n            data: formData\r\n        }).then((res) => {\r\n            if(res.data.success){\r\n                this.getListOfSong(this.state.currentAlbum);\r\n            }\r\n            else{\r\n                alert('file upload failed! \\n Message: ' + res.data.message);\r\n            }\r\n        });\r\n    } \r\n\r\n    deleteSong(data){\r\n        axios({\r\n            url: this.props.server+'/music/deleteSong?song_id='+data.id +'&album_id=' + this.state.currentAlbum,\r\n            method: 'GET'\r\n        }).then((res) => {\r\n            if(res.data.success){\r\n                this.getListOfSong(this.state.currentAlbum);\r\n            }\r\n            else{\r\n                alert('file upload failed! \\n Message: ' + res.data.message);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <div>\r\n                    {this.state.listOfalbum.map(data => {\r\n                        return <div className=\"music_album_items\" key={data.id+data.album_title+Math.random(0,10000)} onClick={()=>this.getListOfSong(data.id)}><Album album_data={data}/></div>\r\n                    })}\r\n                </div>\r\n                {\r\n                    this.state.currentAlbum == null ? null :\r\n                    <div>\r\n                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                            Upload Song\r\n                        </button>\r\n                        <MusicPlayer \r\n                            playType=\"listloop\"\r\n                            server={this.props.server}\r\n                            getAudioInstance={instance=>this.audioInstance=instance}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n                <div>\r\n                    \r\n                    <ul className=\"list-group\">\r\n                        {\r\n                            this.state.listOfSong.map(\r\n                                data => \r\n                                <li key={data+Math.random()+''+Math.random()}>\r\n                                    <div className=\"input-group mb-1\">\r\n                                        <div key={data + Math.random()} className=\"form-control list-group-item list-group-item-action\" onClick={()=>this.audioInstance.playTargetSong(data, true)}>\r\n                                            {data.song_title}\r\n                                        </div>\r\n                                        <div className=\"input-group-append\">\r\n                                            <button \r\n                                                className=\"btn btn-secondary songDeleteButton\" \r\n                                                type=\"button\" \r\n                                                data-toggle=\"modal\"  \r\n                                                data-target=\"#confirmMessage\"\r\n                                                onClick={\r\n                                                    ()=>{\r\n                                                        this.setState({\r\n                                                            actionMessage : \"\\nDelete Song: \" + data.song_title ,\r\n                                                            actionFun : ()=>{this.deleteSong(data)}\r\n                                                        });\r\n                                                    }\r\n                                                }\r\n                                            >Delete</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n\r\n                \r\n                <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form id=\"upload_song_form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"form_song_title\">Song title</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"form_song_title\" aria-describedby=\"songHelper\"/>\r\n                                    <small id=\"songHelper\" className=\"form-text text-muted\">Song Title is not relate to your filename.</small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"form_youtube_link\">Youtube Link</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"form_youtube_link\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"form_audio_file\">Audio_file</label>\r\n                                    <input type=\"file\" className=\"form-control\" id=\"form_audio_file\" required/>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={()=>{\r\n                                this.uploadSong({\r\n                                    'song_title': document.getElementById('form_song_title').value,\r\n                                    'youtube_link': document.getElementById('form_youtube_link').value,\r\n                                    'audio_file': document.getElementById('form_audio_file').files[0]\r\n                            });\r\n                            }}>Upload</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"modal fade\" id=\"confirmMessage\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"confirmMessageLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"confirmMessageLabel\">Confirm Page</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            Please Confirm your Action! <br/>\r\n                            {this.state.actionMessage}\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={()=>{\r\n                                this.state.actionFun()\r\n                            }}>Confirm</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Music;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Switch, Route, Link, Redirect} from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, isLogin, ...rest}) => { \r\n\r\n    return (\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route render={props => (\r\n            isLogin ?\r\n                <Component {...props} {...rest}/>\r\n            : <Redirect to=\"/login\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Folder from './folder';\r\nimport MediaFolder from './mediaFolder';\r\nimport Music from './music';\r\nimport PrivateRoute from './privateRouter';\r\n\r\nclass FolderMain extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            // server : 'https://gcpf1.mattpan.com/api'\r\n            server : this.props.server,\r\n            isLogin : null,\r\n            userid : null,\r\n            username: null,\r\n            email: null\r\n         }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.testUserToken()\r\n        .then(res =>{\r\n            console.log(res);\r\n            this.setState({isLogin: true, userid: res.data.id, username: res.data.username, email: res.data.email});\r\n        }).catch(err=>{\r\n            this.setState({isLogin: false});\r\n        });\r\n    }\r\n\r\n    async testUserToken(){\r\n        return await axios({\r\n            url: \"https://homepc.mattpan.com:5443/api/auth/user\",\r\n            headers:{\r\n                'Authorization' : 'Token ' + localStorage.getItem('token')\r\n            }\r\n        });\r\n    }\r\n\r\n    // Temp Login Method\r\n    tempLogin(username, password){\r\n        axios.post( this.props.server + '/auth/login', {\r\n            'username': username,\r\n            'password' : password\r\n        }).then(res => {\r\n            if(res.data.token){\r\n                localStorage.setItem('token', res.data.token);\r\n            }\r\n            else{\r\n                alert(\"username or password is incorrect!\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <div className=\"navbar-brand\" >Folder</div>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <Link className=\"nav-link\" to=\"/app/public\" >Public <span className=\"sr-only\">(current)</span></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/app/media\">Media</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/app/music\">Music</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav my-2 my-lg-0\">\r\n                            {\r\n                                this.state.isLogin ? \r\n                                <li style={{'color': 'white', 'margin':'8px 10px 0 0'}}>Weclome: {this.state.username}</li>\r\n                                : null\r\n                            }\r\n                            { \r\n                                this.state.isLogin ? \r\n                                <li>\r\n                                    <Link className=\"btn btn-secondary\" to=\"/app/public\" onClick={()=>{\r\n                                        localStorage.removeItem('token');\r\n                                        this.setState({isLogin: false});\r\n                                        axios.defaults.headers.common['Authorization'] = ''}}>LogOut</Link>\r\n                                </li>\r\n                                : \r\n                                <li>\r\n                                    <Link className=\"btn btn-primary\" to=\"/login\">Login</Link>\r\n                                </li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                {\r\n                    this.state.isLogin == null ? <span/>:\r\n                    <Switch>\r\n                        <PrivateRoute component={MediaFolder} isLogin={this.state.isLogin} path='/app/media/(.*)?' target=\"/media\" server={this.props.server}/>\r\n                        <PrivateRoute component={Music} isLogin={this.state.isLogin} path='/app/music/(.*)?' server={this.props.server}/>\r\n                        <Route path='/app/public/(.*)?' render={(props)=><Folder {...props} target=\"/public\" server={this.props.server} />}/>\r\n                    </Switch>\r\n                }\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default FolderMain;","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport {Link} from 'react-router-dom';\r\nimport './login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n        this.processLogin = this.processLogin.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.defaults.headers.common['Authorization'] = '';\r\n        document.body.style.backgroundColor = '#212121';\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.body.style.backgroundColor = 'white';\r\n    }\r\n\r\n    processLogin(){\r\n        axios.post(this.props.server + '/auth/login', {\r\n            'username': document.getElementById('username').value,\r\n            'password' : document.getElementById('password').value\r\n        }).then(res => {\r\n            if(res.data.token){\r\n                localStorage.setItem('token', res.data.token);\r\n                axios.defaults.headers.common['Authorization'] = 'Token '+ res.data.token;\r\n                window.history.back();\r\n            }\r\n            else{\r\n                document.getElementById('login-message').value = \"username or password is incorrect!\";\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n        <div className=\"form\">\r\n            <div className='control'>\r\n                <h1>\r\n                Sign In\r\n                </h1>\r\n            </div>\r\n            <div className=\"control block-cube block-input login-item\">\r\n                <input id=\"username\" type=\"text\" name='username' placeholder='Username'></input>\r\n                <div class='bg-top'>\r\n                    <div class='bg-inner'></div>\r\n                </div>\r\n                <div class='bg-right'>\r\n                    <div class='bg-inner'></div>\r\n                </div>\r\n                <div class='bg'>\r\n                    <div class='bg-inner'></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"control block-cube block-input login-item\">\r\n                <input id=\"password\" name='password' placeholder='Password' type='password'></input>\r\n                <div class='bg-top'>\r\n                    <div class='bg-inner'></div>\r\n                </div>\r\n                <div class='bg-right'>\r\n                    <div class='bg-inner'></div>\r\n                </div>\r\n                <div class='bg'>\r\n                    <div class='bg-inner'></div>\r\n                </div>\r\n            </div>\r\n            <button className=\"login-button btn block-cube block-cube-hover\" type=\"button\" onClick={this.processLogin}>\r\n                <div className='bg-top'>\r\n                    <div className='bg-inner'></div>\r\n                    </div>\r\n                    <div className='bg-right'>\r\n                    <div className='bg-inner'></div>\r\n                </div>\r\n                <div className='bg'>\r\n                    <div className='bg-inner'></div>\r\n                </div>\r\n                <div className='text'>\r\n                    Log In\r\n                </div>\r\n            </button>\r\n            <span className=\"login-message\" id=\"login-message\"></span>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default Login;","import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport './App.css';\r\nimport './components/main/default.css';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport MainPage from './components/main/mainpage.js';\r\nimport FolderMain from './components/folder/main';\r\nimport Login from './components/main/login';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      server : 'https://homepc.mattpan.com:5443/api'\r\n    }\r\n    ReactGA.initialize('UA-156169363-1');\r\n    ReactGA.pageview(window.location.pathname);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path='/' component={MainPage}/>\r\n          <Route path='/login' render={(props)=><Login {...props} server={this.state.server} />}></Route>\r\n          <Route path='/app/(.*)?' render={(props)=><FolderMain {...props} server={this.state.server} />}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n    <App />\r\n</BrowserRouter>\r\n\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}